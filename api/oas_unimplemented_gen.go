// Code generated by ogen, DO NOT EDIT.

package api

import (
	"context"

	ht "github.com/ogen-go/ogen/http"
)

// UnimplementedHandler is no-op Handler which returns http.ErrNotImplemented.
type UnimplementedHandler struct{}

var _ Handler = UnimplementedHandler{}

// ResourcesPost implements POST /resources operation.
//
// Add a new resource type.
//
// POST /resources
func (UnimplementedHandler) ResourcesPost(ctx context.Context, req *Resource) (r *Resource, _ error) {
	return r, ht.ErrNotImplemented
}

// ResourcesResourceIDGet implements GET /resources/{resourceID} operation.
//
// Return resources.
//
// GET /resources/{resourceID}
func (UnimplementedHandler) ResourcesResourceIDGet(ctx context.Context, params ResourcesResourceIDGetParams) (r *Resource, _ error) {
	return r, ht.ErrNotImplemented
}

// UserPatch implements PATCH /user operation.
//
// Update a user.
//
// PATCH /user
func (UnimplementedHandler) UserPatch(ctx context.Context, req *Entity) (r *Entity, _ error) {
	return r, ht.ErrNotImplemented
}

// UserPost implements POST /user operation.
//
// Add a new user.
//
// POST /user
func (UnimplementedHandler) UserPost(ctx context.Context, req *Entity) (r *Entity, _ error) {
	return r, ht.ErrNotImplemented
}

// UsersGet implements GET /users operation.
//
// Return all users.
//
// GET /users
func (UnimplementedHandler) UsersGet(ctx context.Context) (r []Entity, _ error) {
	return r, ht.ErrNotImplemented
}

// UsersUserIdGet implements GET /users/{userId} operation.
//
// Return user by id.
//
// GET /users/{userId}
func (UnimplementedHandler) UsersUserIdGet(ctx context.Context, params UsersUserIdGetParams) (r *Entity, _ error) {
	return r, ht.ErrNotImplemented
}

// WhoamiGet implements GET /whoami operation.
//
// Return user from oauth token.
//
// GET /whoami
func (UnimplementedHandler) WhoamiGet(ctx context.Context) (r *Entity, _ error) {
	return r, ht.ErrNotImplemented
}

// NewError creates *ErrorStatusCode from error returned by handler.
//
// Used for common default response.
func (UnimplementedHandler) NewError(ctx context.Context, err error) (r *ErrorStatusCode) {
	r = new(ErrorStatusCode)
	return r
}
